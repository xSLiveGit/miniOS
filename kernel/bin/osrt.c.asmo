	.file	"osrt.c"
	.intel_syntax noprefix
	.comm	gEnviroment,4006,64
	.text
	.globl	InitEnviroment
	.type	InitEnviroment, @function
InitEnviroment:
.LFB0:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	sub	rsp, 32
	mov	r8d, 0
	mov	edx, 4006
	mov	ecx, OFFSET FLAT:gEnviroment
	call	os_memset
	call	ScrClearScreen
	mov	eax, 1
	leave
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	InitEnviroment, .-InitEnviroment
	.globl	os_memset
	.type	os_memset, @function
os_memset:
.LFB1:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	sub	rsp, 16
	mov	QWORD PTR [rbp+16], rcx
	mov	DWORD PTR [rbp+24], edx
	mov	eax, r8d
	mov	BYTE PTR [rbp+32], al
	mov	rax, QWORD PTR [rbp+16]
	mov	QWORD PTR [rbp-8], rax
	mov	edx, DWORD PTR [rbp+24]
	mov	rax, QWORD PTR [rbp-8]
	add	rax, rdx
	mov	QWORD PTR [rbp-16], rax
	jmp	.L4
.L5:
	mov	rax, QWORD PTR [rbp-8]
	lea	rdx, [rax+1]
	mov	QWORD PTR [rbp-8], rdx
	movzx	edx, BYTE PTR [rbp+32]
	mov	BYTE PTR [rax], dl
.L4:
	mov	rax, QWORD PTR [rbp-8]
	cmp	rax, QWORD PTR [rbp-16]
	jne	.L5
	leave
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	os_memset, .-os_memset
	.globl	PrvHexdigitToChar
	.type	PrvHexdigitToChar, @function
PrvHexdigitToChar:
.LFB2:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	mov	eax, ecx
	mov	BYTE PTR [rbp+16], al
	cmp	BYTE PTR [rbp+16], 9
	ja	.L7
	movzx	eax, BYTE PTR [rbp+16]
	add	eax, 48
	jmp	.L8
.L7:
	movzx	eax, BYTE PTR [rbp+16]
	add	eax, 55
.L8:
	pop	rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	PrvHexdigitToChar, .-PrvHexdigitToChar
	.globl	PrvPrintString
	.type	PrvPrintString, @function
PrvPrintString:
.LFB3:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	sub	rsp, 48
	mov	QWORD PTR [rbp+16], rcx
	mov	rcx, QWORD PTR [rbp+16]
	call	os_strlen
	mov	WORD PTR [rbp-6], ax
	cmp	WORD PTR [rbp-6], 0
	jne	.L11
	jmp	.L10
.L11:
	mov	DWORD PTR [rbp-4], 0
	jmp	.L13
.L14:
	mov	eax, DWORD PTR [rbp-4]
	movsx	rdx, eax
	mov	rax, QWORD PTR [rbp+16]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	ecx, OFFSET FLAT:gEnviroment
	call	ScrWriteInBuffer
	add	DWORD PTR [rbp-4], 1
.L13:
	movzx	eax, WORD PTR [rbp-6]
	sub	eax, 1
	cmp	eax, DWORD PTR [rbp-4]
	jg	.L14
	movzx	eax, WORD PTR [rbp-6]
	lea	rdx, [rax-1]
	mov	rax, QWORD PTR [rbp+16]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	ecx, OFFSET FLAT:gEnviroment
	call	ScrWriteOnScreen
.L10:
	leave
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	PrvPrintString, .-PrvPrintString
	.globl	PrvPrinfHex
	.type	PrvPrinfHex, @function
PrvPrinfHex:
.LFB4:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	push	rbx
	sub	rsp, 72
	.cfi_offset 3, -24
	mov	QWORD PTR [rbp+16], rcx
	mov	QWORD PTR [rbp-48], 0
	mov	QWORD PTR [rbp-40], 0
	mov	BYTE PTR [rbp-32], 0
	mov	WORD PTR [rbp-18], 16
	mov	WORD PTR [rbp-20], 0
	jmp	.L16
.L17:
	movzx	eax, WORD PTR [rbp-20]
	cdqe
	mov	BYTE PTR [rbp-48+rax], 48
	add	WORD PTR [rbp-20], 1
.L16:
	movzx	eax, WORD PTR [rbp-20]
	cmp	ax, WORD PTR [rbp-18]
	jb	.L17
	jmp	.L18
.L19:
	mov	rax, QWORD PTR [rbp+16]
	shr	rax, 4
	mov	QWORD PTR [rbp+16], rax
	sub	WORD PTR [rbp-18], 1
	movzx	ebx, WORD PTR [rbp-18]
	mov	rax, QWORD PTR [rbp+16]
	movzx	eax, al
	and	eax, 15
	mov	ecx, eax
	call	PrvHexdigitToChar
	movsx	rdx, ebx
	mov	BYTE PTR [rbp-48+rdx], al
.L18:
	cmp	QWORD PTR [rbp+16], 0
	jne	.L19
	lea	rax, [rbp-48]
	mov	rcx, rax
	call	PrvPrintString
	add	rsp, 72
	pop	rbx
	.cfi_restore 3
	pop	rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	PrvPrinfHex, .-PrvPrinfHex
	.globl	PrvPrintChar
	.type	PrvPrintChar, @function
PrvPrintChar:
.LFB5:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	sub	rsp, 32
	mov	eax, ecx
	mov	BYTE PTR [rbp+16], al
	movsx	eax, BYTE PTR [rbp+16]
	mov	edx, eax
	mov	ecx, OFFSET FLAT:gEnviroment
	call	ScrWriteOnScreen
	leave
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	PrvPrintChar, .-PrvPrintChar
	.globl	os_printf
	.type	os_printf, @function
os_printf:
.LFB6:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	sub	rsp, 48
	mov	QWORD PTR [rbp+24], rdx
	mov	QWORD PTR [rbp+32], r8
	mov	QWORD PTR [rbp+40], r9
	mov	QWORD PTR [rbp+16], rcx
	call	DebugBreak
	lea	rax, [rbp+16]
	mov	QWORD PTR [rbp-8], rax
	jmp	.L22
.L26:
	mov	rax, QWORD PTR [rbp+16]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rbp-9], al
	mov	rax, QWORD PTR [rbp+16]
	add	rax, 1
	mov	QWORD PTR [rbp+16], rax
	cmp	BYTE PTR [rbp-9], 37
	je	.L23
	movsx	eax, BYTE PTR [rbp-9]
	mov	ecx, eax
	call	PrvPrintChar
	jmp	.L22
.L23:
	mov	rax, QWORD PTR [rbp+16]
	lea	rdx, [rax+1]
	mov	QWORD PTR [rbp+16], rdx
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rbp-10], al
	add	QWORD PTR [rbp-8], 8
	movsx	eax, BYTE PTR [rbp-10]
	cmp	eax, 115
	je	.L24
	cmp	eax, 120
	je	.L25
	jmp	.L22
.L25:
	mov	rax, QWORD PTR [rbp-8]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	PrvPrinfHex
	jmp	.L22
.L24:
	mov	rax, QWORD PTR [rbp-8]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	PrvPrintString
	nop
.L22:
	mov	rax, QWORD PTR [rbp+16]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L26
	leave
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	os_printf, .-os_printf
	.ident	"GCC: (GNU) 4.9.0 20140309 (experimental)"
